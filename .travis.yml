os: linux
language: android
jdk: oraclejdk8

env:
  global:
    # The same build tools version in the project.
    - BUILD_TOOLS_VERSION=29.0.2
    # Android API level used in this project.
    - API=29

before_install:
  - yes | sdkmanager "platforms;android-${API}"
  - yes | sdkmanager "build-tools;${BUILD_TOOLS_VERSION}"

android:
  components:
    - tools
    - platform-tools
    # Support libraries.
    - extra-android-support
    - extra-android-m2repository
    - extra-google-m2repository

notifications:
  email: false

branches:
  only:
    - master

script:
  # The tests are skipped from the build task since they will be run directly with the coverage calculation.
  - ./gradlew build -x test testCoverage -s

deploy:
  provider: script
  script: ./gradlew publishLibrary -Pversion.name=$TRAVIS_TAG
  on:
    tags: true

after_success:
  # Uploads all the coverage reports to Codecov.io:
  # -Z -> if the upload of a report fails, the build fails too
  # -s -> searches in the paths in which CoveragePlugin generates the coverage reports
  # -f -> uploads the XML files found in the search paths (specified with -s)
  # -X -> excludes the tools not needed by this project
  - bash <(curl -s https://codecov.io/bash) -Z -s "**/build/coverageReport/test*Coverage/test*Coverage.xml" -f "*.xml" -X gcov -X coveragepy -X xcode -X gcovout

before_cache:
  - rm -f  $HOME/.gradle/caches/modules-2/modules-2.lock
  - rm -fr $HOME/.gradle/caches/*/plugin-resolution/

cache:
  directories:
    - $HOME/.gradle/caches/
    - $HOME/.gradle/wrapper/
    - $HOME/.android/build-cache